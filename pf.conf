# Macros and tables
wired = "re0"
wireless = "iwx0"
virtual = "vio0" 
loopback = "lo0"
all_if = "{" $wired $wireless $virtual "}"
inbound_tcp  = "{ domain www https 853 6697 53 }" 
outbound_tcp = "{ domain www https 853 6697 53 }" 
inbound_udp  = "{ domain 853 53 }"
outbound_udp = "{ domain 853 53 }"
icmp_types = "echoreq"
ipsec_protos = "{ esp, ah }"
# port:protocol <==> 853:DoT 70:gopher 53:DNS_default
table <blacklist> persist file "/etc/blacklist-ip"

block  # Deny all inbound and outbound traffic 
block quick on $all_if inet6  # Block inbound and outbound IPv6 immediately

# Prevent address spoofing
antispoof quick for $all_if
block in quick from urpf-failed

block return in on ! $loopback proto tcp to port 6000:6010  # Do not permit remote connections to X11
block return out log proto {tcp udp} user _pbuild  # Port build user does not need network

# Block packets from blacklisted IP addresses immediately on matching the packet description provided below
block in quick on $all_if from <blacklist> 
block out quick on $all_if to <blacklist>

anchor "relayd/*"  # Needed by unwind(8) 
anchor "ftp-proxy/*"

# OSI layer 4 filtering (block/allow protocols; open/close ports)
pass  in  on any proto tcp to port $inbound_tcp  modulate state
pass  out on any proto tcp to port $outbound_tcp modulate state
pass  in  on any proto udp to port $inbound_udp  keep     state
pass  out on any proto udp to port $outbound_udp keep     state

# Make ping and traceroute work
pass inet proto icmp icmp-type $icmp_types
pass out on $all_if inet proto udp to port 33433:33626

# Open some ports to allow protocols necessary for IPsec to pass
pass  in on any proto $ipsec_protos

# Allow applications who need the passing of TCP SYN packets
pass  in quick on any all allow-opts


##########
set reassemble yes
set loginterface $wireless
set loginterface $wired 
set loginterface vio0
set skip on $loopback

match in all scrub (no-df random-id max-mss 1440)

# This is incompatible with the bridged tap device configuration
# used for OpenVPN unless we set skip on one of the bridged interfaces.
